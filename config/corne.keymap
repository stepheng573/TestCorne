/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&led_strip { chain-length = <27>; };

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
            //                    | GUI | LWR | ENT |   | SPC | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q   &kp W  &kp E     &kp R         &kp T    &kp Y      &kp U  &kp I     &kp O      &kp P       &kp BSPC
&kp LCTRL  &kp A   &kp S  &kp D     &kp F         &kp G    &kp H      &kp J  &kp K     &kp L      &kp SEMI    &kp RET
&kp LSHFT  &trans  &kp Z  &kp X     &kp C         &kp V    &kp B      &kp N  &kp M     &kp COMMA  &kp PERIOD  &kp SLASH
                          &kp LGUI  &kp LEFT_GUI  &mo 1    &kp SPACE  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1    |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | LCTRL| BTCLR | BT0 | BT1 | BT2 | BT3 |   | LFT | DWN |  UP | RGT |     |      |
            // | ESC  |       | HOME| PGUP| PGDN| END |   |     |     |     |     |     |      |
            //                      | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &trans          &trans      &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT    &mt LS(NUMBER_1) NUMBER_1  &mt LS(NUMBER_2) NUMBER_2  &mt LS(NUMBER_3) NUMBER_3  &trans  &trans      &kp BSPC
&kp LCTRL  &bt BT_CLR      &bt BT_NXT  &trans          &trans            &trans        &mt LS(NUMBER_4) NUMBER_4  &mt LS(DOWN) N5            &mt LS(NUMBER_6) NUMBER_6  &trans  &trans      &kp C_VOLUME_UP
&kp ESC    &bt BT_CLR_ALL  &kp HOME    &kp PG_UP       &kp PG_DN         &kp END       &mt LS(N7) N7              &mt LS(N8) N8              &mt LS(N9) N9              &trans  &kp C_MUTE  &kp C_VOLUME_DOWN
                                       &kp LGUI        &trans            &trans        &kp RET                    &mt LS(N0) N0              &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |   !   |   @   |   #   |   $   |   %   |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |RGB_TOG|RGB_HUI|RGB_SAI|RGB_VAI|       |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |RGB_MOD|RGB_HUD|RGB_SAD|RGB_VAD|QK_BOOT|   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                            | GUI |     |  SPC  |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL        &kp AT          &kp HASH         &kp DLLR        &kp PRCNT      &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &mkp RCLK       &mmv MOVE_UP    &mkp LCLK        &trans          &sys_reset     &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &studio_unlock  &bootloader    &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                                           &kp LGUI         &trans          &kp SPACE      &kp RET    &trans     &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
