/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&led_strip { chain-length = <27>; };

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
            //                    | GUI | LWR | ENT |   | SPC | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q            &kp W  &kp E          &kp R  &kp T    &kp Y         &kp U      &kp I     &kp O      &kp P       &kp BSPC
&kp LCTRL  &kp A            &kp S  &kp D          &kp F  &kp G    &kp H         &kp J      &kp K     &kp L      &kp SEMI    &kp RET
&sk LSHFT  &mt LG(V) LG(C)  &kp Z  &kp X          &kp C  &kp V    &kp B         &kp N      &kp M     &kp COMMA  &kp PERIOD  &kp SLASH
                                   &kp LG(SPACE)  &mo 1  &mo 2    &kp LEFT_GUI  &kp SPACE  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1    |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | LCTRL| BTCLR | BT0 | BT1 | BT2 | BT3 |   | LFT | DWN |  UP | RGT |     |      |
            // | ESC  |       | HOME| PGUP| PGDN| END |   |     |     |     |     |     |      |
            //                      | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB         &kp LG(Q)  &kp LG(W)  &kp LG(T)       &kp UP_ARROW     &kp PAGE_UP      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp MINUS         &kp EQUAL  &kp BSPC
&kp LCTRL       &kp LG(C)  &kp LG(V)  &kp LEFT        &kp DOWN         &kp RIGHT        &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp LEFT_BRACKET  &kp RBKT   &kp RG(RS(L))
&kp LEFT_SHIFT  &trans     &kp LEFT   &kp DOWN_ARROW  &kp C_VOLUME_UP  &kp PAGE_DOWN    &kp N7        &kp N8        &kp N9        &kp SQT           &trans     &trans
                                      &kp LGUI        &trans           &kp SPACE        &kp RET       &kp SPACE     &kp NUMBER_0
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |   !   |   @   |   #   |   $   |   %   |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |RGB_TOG|RGB_HUI|RGB_SAI|RGB_VAI|       |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |RGB_MOD|RGB_HUD|RGB_SAD|RGB_VAD|QK_BOOT|   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                            | GUI |     |  SPC  |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp LC(LG(Q))  &to 3           &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT           &kp EXCLAMATION  &kp AT_SIGN   &kp HASH               &kp UNDERSCORE     &kp PLUS         &kp BSPC
&kp LCTRL  &sys_reset     &trans          &trans          &trans            &kp C_VOLUME_UP      &kp DOLLAR       &kp PERCENT   &kp CARET              &kp LEFT_BRACE     &kp RIGHT_BRACE  &bt BT_CLR
&kp LSHFT  &bootloader    &studio_unlock  &trans          &kp K_MUTE        &kp C_VOLUME_DOWN    &kp AMPERSAND    &kp ASTERISK  &kp LEFT_PARENTHESIS   &kp DOUBLE_QUOTES  &trans           &bt BT_NXT
                                          &kp LGUI        &trans            &kp SPACE            &kp RET          &kp SPACE     &kp RIGHT_PARENTHESIS
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &to 0   &trans  &trans  &trans    &msc SCRL_UP    &mmv MOVE_UP    &mkp RCLK        &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &msc SCRL_DOWN  &mmv MOVE_DOWN  &trans           &trans  &trans  &trans
                        &trans  &trans  &trans    &trans          &trans          &trans
            >;
        };
    };
};
